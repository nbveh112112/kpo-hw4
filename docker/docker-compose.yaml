version: "3.1"
services:
  order-db:
    image: postgres
    ports:
      - "5434:5434"
    environment:
      POSTGRES_PASSWORD: postgres
      PGPORT: 5434
    volumes:
      - ./postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/

  order-service:
    container_name: "order-service"
    image: "order-service"
    build: ../order-sevice/
    ports:
      - "8081:8080"
    depends_on:
      - order-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5434/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  user-db:
    image: postgres
    expose:
      - "5433" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - "5433:5433"
    environment:
      POSTGRES_PASSWORD: postgres
      PGPORT: 5433
    volumes:
      - ./postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/

  user-service:
    container_name: "user-service"
    image: "user-service"
    build: ../user-service/
    ports:
      - "8082:8080"
    depends_on:
      - user-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5433/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  api-gateway:
    container_name: "api-gateway"
    image: "api-gateway"
    build: ../api-gateway/
    ports:
      - "8080:8080"